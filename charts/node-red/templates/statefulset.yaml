apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
spec:
  serviceName: {{ template "fullname" . }}
  replicas: 3
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      updateStrategy:
        type: RollingUpdate
        containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["npm", "start", "--", "--userDir", "/data", "--settings", "/usr/src/node-red/node_modules/node-red/settings/settings.js"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          volumeMounts:
          - mountPath: /data
            name: {{ .Release.Name }}-data
          - mountPath: /usr/src/node-red/node_modules/node-red/settings
            name: {{ .Release.Name }}-settings
          resources:
{{ toYaml .Values.resources | indent 12 }}
      restartPolicy: Always
      volumes:
      - name: {{ .Release.Name }}-settings
        configMap:
          name: {{ .Release.Name }}-configmap
          items:
          - key: settings.js
            path: settings.js
      - name: {{ .Release.Name }}-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-data
      {{- else }}
        emptyDir: {}
      {{ end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
