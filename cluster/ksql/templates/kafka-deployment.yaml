apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f /home/avigershon/projects/ksql/docs/quickstart/docker-compose.yml
      convert
    kompose.version: 1.9.0 (093c756)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: kafka
    spec:
      containers:
      - env:
        - name: CONFLUENT_METRICS_ENABLE
          value: "true"
        - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
          value: kafka:29092
        - name: CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS
          value: "1"
        - name: CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT
          value: zookeeper:32181
        - name: CONFLUENT_SUPPORT_CUSTOMER_ID
          value: anonymous
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: PLAINTEXT
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        - name: KAFKA_METRIC_REPORTERS
          value: io.confluent.metrics.reporter.ConfluentMetricsReporter
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:32181
        image: confluentinc/cp-enterprise-kafka:4.0.0
        name: kafka
        ports:
        - containerPort: 9092
        - containerPort: 29092
        resources: {}
      restartPolicy: Always
status: {}
