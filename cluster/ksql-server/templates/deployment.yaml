apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "ksql-server.fullname" . }}
  labels:
    app: {{ template "ksql-server.name" . }}
    chart: {{ template "ksql-server.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "ksql-server.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ksql-server.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          #command: ["/bin/bash"]
          #args: ["-c","echo Waiting for Kafka to be ready... && \
          #             cub kafka-ready -b {{ .Values.kafka.host }}:{{ .Values.kafka.port }} 1 20 && \
          #             echo Waiting a few seconds for topic creation to finish... && \
          #             sleep 2 && \
          #             /usr/bin/ksql-server-start /etc/ksql/ksqlserver.properties"]
          args:
            - perl
            - -e
            - while(1){ sleep 99999 }
          env:
            - name: KSQL_CONFIG_DIR
              value: /etc/ksql
            - name: KSQL_LOG4J_OPTS
              value: -Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties
            - name: KSQL_OPTS
              value: "-Dbootstrap.servers={{ .Values.kafka.host }}:{{ .Values.kafka.port }}"
            - name: KSQL_BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.host }}:{{ .Values.kafka.port }}
            - name: KSQL_LISTENERS
              value: http://0.0.0.0:8088/
            - name: KSQL_KSQL_SERVICE_ID
              value: confluent_standalone_2_
            - name: STREAMS_BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.host }}:{{ .Values.kafka.port }}
            - name: STREAMS_SCHEMA_REGISTRY_HOST
              value: {{ .Values.schemaRegistry.host }}
            - name: STREAMS_SCHEMA_REGISTRY_PORT
              value: "{{ .Values.schemaRegistry.port }}"
          ports:
            - name: headless
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: config
            mountPath: /etc/ksql/ksqlserver.properties
            readOnly: true
            subPath: ksqlserver.properties
      volumes:
      - name: config
        configMap:
          defaultMode: 0444
          name: {{ template "ksql-server.name" . }}-configmap
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
